/**
	 * These parameter values can be changed 
	 * You may add other Parameters as required to this class 
	 * 
	 */
	private static int numHidden = 5;	
	private static int numGenes = calculateNumGenes();
	public static double minGene = -3; // specifies minimum and maximum weight values 
	public static double maxGene = +3;
	
	public static int popSize = 40;
	public static int maxEvaluations = 20000;
	
	//parameters for selection
	public static int selectTSize = 4;
	
	//parameters for crossover/reproduction
	public static int noOfChildren = 2; //arithmetic crossover will only give 1 child, replace random parent will work with a max of 2
	public static int cutPoints = 2; //if you want to do 1 point crossover set this to 1
	
	// Parameters for mutation 
	// Rate = probability of changing a gene
	// Change = the maximum +/- adjustment to the gene value
	public static double mutateRate = 0.04; // mutation rate for mutation operator
	public static double mutateChange = 0.1; // delta change for mutation operator
	
	//parameters for replacement
	public static int replacementTSize = 4; //allows for tournament selection and replacement to have different sizes
	
	//Random number generator used throughout the application
	public static long seed = System.currentTimeMillis();
	public static Random random = new Random(seed);

	//set the NeuralNetwork class here to use your code from the GUI
	//public static Class neuralNetworkClass = ExampleHillClimber.class;
	public static Class neuralNetworkClass = ExampleEvolutionaryAlgorithm.class;